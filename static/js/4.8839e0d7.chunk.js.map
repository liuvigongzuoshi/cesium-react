{"version":3,"sources":["containers/ToolBar/index.module.css","containers/LocationBar/index.module.css","App.module.css","containers/AppViewer/ImageryLayers.js","containers/AppViewer/GeoJson.js","containers/AppViewer/Czml.js","containers/AppViewer/EventHandler.js","containers/AppViewer/Entitys.js","containers/AppViewer/index.js","containers/ToolBar/index.js","containers/LocationBar/index.js","App.tsx"],"names":["module","exports","toolbar","locationbar","locationcamera","distancelegend","ImageryLayers","console","log","react_default","a","createElement","resium_es","this","props","imageryProviders","map","item","i","key","imageryProvider","WebMapTileServiceImageryProvider","PureComponent","withCesium","_ref","cesium","geoJsonData","data","onLoad","viewer","flyTo","czmlData","CzmlDataSource","EventHandler","inject","e","endPosition","_this$props","_this$props$cesium","camera","globe","setPositionData","appViewer","positionData","Cartesian2","ellipsoid","arguments","length","undefined","Ellipsoid","WGS84","cartesian","pickEllipsoid","defined","cartographic","cartesianToCartographic","longitude","CesiumMath","toDegrees","toFixed","latitude","elevation","Math","ceil","getHeight","long","lat","height","positionCartographic","getMousePointPosition","action","_handleMouseMoveEvent","bind","type","ScreenSpaceEventType","MOUSE_MOVE","Entitys","entityPosition","Cartesian3","fromDegrees","name","position","pixelSize","color","Color","CRIMSON","outlineWidth","outlineColor","LIGHTCORAL","Ion","defaultAccessToken","appViewerStore","cesiumAccessToken","AppViewer","observer","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","scene","debugShowFramesPerSecond","cesiumWidget","creditContainer","style","display","tileset","zoomTo","_this2","_this$props$appViewer","destination","CesiumTerrainProvider","url","IonResource","fromAssetId","full","animation","shouldAnimate","baseLayerPicker","timeline","geocoder","ref","cesiumElement","AppViewer_ImageryLayers","AppViewer_EventHandler","AppViewer_Entitys","AppViewer_GeoJson","AppViewer_Czml","Component","czmlMenu","menu","onClick","__webpack_require__","then","t","_ref2","czmlBox","default","setCzmlData","_ref3","satelliteCzml","_ref4","dynamicPoint","_ref5","pathCzml","Item","geoJsonMenu","_ref6","_ref7","pointGeoJson","setGeoJsonData","_ref8","simplestylesGeojson","_ref9","statestopoGeojson","ToolBar","_className","concat","styles","className","dropdown","overlay","es_button","marginRight","marginBottom","icon","LocationBar","App","react","containers_ToolBar","containers_LocationBar","containers_AppViewer","React"],"mappings":"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","file":"static/js/4.8839e0d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"ToolBar_toolbar__1jQkx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"locationbar\":\"LocationBar_locationbar__3Qpd2\",\"locationcamera\":\"LocationBar_locationcamera__q8YUE\",\"distancelegend\":\"LocationBar_distancelegend__2JWXa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"App_toolbar__11cl6\",\"locationbar\":\"App_locationbar__3Vkll\"};","import React, { PureComponent } from 'react';\nimport { WebMapTileServiceImageryProvider } from 'cesium';\nimport { ImageryLayer, ImageryLayerCollection } from 'resium';\n// import memoize from \"memoize-one\";\n// console.log(React.memo);\n\n// const imageryProvider = memoize(imageryProvider => new WebMapTileServiceImageryProvider(imageryProvider));\nconst imageryProvider = imageryProvider => new WebMapTileServiceImageryProvider(imageryProvider);\n\n// const ImageryLayers = ({ imageryProviders }) => {\n//   return (\n//     <ImageryLayerCollection>\n//       {imageryProviders.map((item, i) => {\n//         return <ImageryLayer key={i} imageryProvider={imageryProvider(item)} />;\n//       })}\n//     </ImageryLayerCollection>\n//   );\n// };\n\nclass ImageryLayers extends PureComponent {\n  render() {\n    console.log('ImageryLayers render');\n    return (\n      <ImageryLayerCollection>\n        {this.props.imageryProviders.map((item, i) => {\n          return <ImageryLayer key={i} imageryProvider={imageryProvider(item)} />;\n        })}\n      </ImageryLayerCollection>\n    );\n  }\n}\n\nexport default ImageryLayers;\n","import React from 'react';\nimport { GeoJsonDataSource, withCesium } from 'resium';\n\nconst GeoJson = ({ cesium, geoJsonData }) => {\n  return geoJsonData ? (\n    <GeoJsonDataSource data={geoJsonData} onLoad={geoJsonData => cesium.viewer.flyTo(geoJsonData)} />\n  ) : null;\n};\n\nexport default withCesium(GeoJson);\n","import React from 'react';\nimport { CzmlDataSource, withCesium } from 'resium';\n\nconst Czml = ({ cesium, czmlData }) => {\n  return czmlData ? (\n    <CzmlDataSource data={czmlData} onLoad={CzmlDataSource => cesium.viewer.flyTo(CzmlDataSource)} />\n  ) : null;\n};\n\nexport default withCesium(Czml);\n","import React, { PureComponent } from 'react';\nimport { inject } from 'mobx-react';\nimport { KeyboardEventModifier, ScreenSpaceEventType, Ellipsoid, defined, Math as CesiumMath, Globe } from 'cesium';\nimport { ScreenSpaceEventHandler, ScreenSpaceEvent, withCesium } from 'resium';\n\n/**\n *获取实例的二维笛卡尔点的经度、纬度、相机高度、海拔高度\n *\n * @param {*} camera\n * @param {*} globe\n * @param {*} Cartesian2\n * @param {*} [ellipsoid=Ellipsoid.WGS84]\n * @returns\n */\nconst getMousePointPosition = (camera, globe, Cartesian2, ellipsoid = Ellipsoid.WGS84) => {\n  // 通过指定的椭球或者地图对应的坐标系，将鼠标的二维坐标转换为对应椭球体三维坐标\n  const cartesian = camera.pickEllipsoid(Cartesian2);\n  if (!defined(cartesian)) return null;\n\n  // 将笛卡尔坐标转换为地理坐标\n  const cartographic = ellipsoid.cartesianToCartographic(cartesian);\n  // 将弧度转为度的十进制度表示\n  const longitude = CesiumMath.toDegrees(cartographic.longitude).toFixed(6);\n  const latitude = CesiumMath.toDegrees(cartographic.latitude).toFixed(6);\n  // 获取海拔高度\n  const elevation = Math.ceil(globe.getHeight(cartographic));\n  // 获取相机高度\n  const height = Math.ceil(camera.positionCartographic.height) - elevation;\n\n  return {\n    long: longitude,\n    lat: latitude,\n    height: height,\n    elevation: elevation\n  };\n};\n\n@inject('appViewer')\nclass EventHandler extends PureComponent {\n  _handleEvent(e) {\n    console.log(e);\n  }\n\n  _handleMouseMoveEvent({ endPosition }) {\n    const {\n      cesium: { camera, globe },\n      appViewer: { setPositionData }\n    } = this.props;\n    const positionData = getMousePointPosition(camera, globe, endPosition);\n    if (!positionData) return false;\n    setPositionData(positionData);\n  }\n\n  render() {\n    return (\n      <ScreenSpaceEventHandler>\n        <ScreenSpaceEvent action={this._handleMouseMoveEvent.bind(this)} type={ScreenSpaceEventType.MOUSE_MOVE} />\n      </ScreenSpaceEventHandler>\n    );\n  }\n}\n\nexport default withCesium(EventHandler);\n","import React, { PureComponent } from 'react';\nimport { Color, Cartesian3 } from 'cesium';\nimport { Entity, PointGraphics, EntityDescription } from 'resium';\n\nclass Entitys extends PureComponent {\n  render() {\n    const entityPosition = Cartesian3.fromDegrees(105.0707383, 30.7117244, 100);\n    return (\n      <Entity name=\"Sokyo\" position={entityPosition}>\n        <PointGraphics pixelSize={25} color={Color.CRIMSON} outlineWidth={5} outlineColor={Color.LIGHTCORAL} />\n        <EntityDescription>\n          <h1>Hello, world.</h1>\n          <p>JSX is available here!</p>\n        </EntityDescription>\n      </Entity>\n    );\n  }\n}\n\nexport default Entitys;\n","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { Ion, Cartesian3, CesiumTerrainProvider, IonResource, Color } from 'cesium';\nimport { Viewer, CameraFlyTo, Cesium3DTileset } from 'resium';\nimport appViewerStore from '@/stores/modules/appViewer';\nimport ImageryLayers from './ImageryLayers';\nimport GeoJson from './GeoJson';\nimport Czml from './Czml';\nimport EventHandler from './EventHandler';\nimport Entitys from './Entitys';\n\nIon.defaultAccessToken = appViewerStore.cesiumAccessToken;\n\n@inject('appViewer')\n@observer\nclass AppViewer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewer: null\n    };\n  }\n\n  componentDidMount() {\n    if (this.viewer) {\n      this.viewer.scene.debugShowFramesPerSecond = true;\n      this.viewer.cesiumWidget.creditContainer.style.display = 'none';\n    }\n  }\n\n  _handleReady(tileset) {\n    console.log(tileset);\n\n    if (this.viewer) {\n      this.viewer.zoomTo(tileset);\n    }\n  }\n\n  _handleEvent(e) {\n    console.log(e);\n  }\n\n  render() {\n    const { geoJsonData, czmlData, destination, imageryProviders } = this.props.appViewer;\n    const terrainProvider = new CesiumTerrainProvider({\n      url: IonResource.fromAssetId(3956)\n    });\n\n    console.log('AppViewer render');\n\n    return (\n      <Viewer\n        full\n        animation={false}\n        shouldAnimate={true}\n        baseLayerPicker={false}\n        timeline={false}\n        geocoder={false}\n        // terrainProvider={terrainProvider}\n        ref={e => {\n          this.viewer = e && e.cesiumElement;\n        }}\n      >\n        <ImageryLayers imageryProviders={imageryProviders} />\n        <EventHandler />\n        <Entitys />\n        {destination ? <CameraFlyTo destination={destination} /> : null}\n        <GeoJson geoJsonData={geoJsonData} />\n        <Czml czmlData={czmlData} />\n        {/* <Cesium3DTileset url={IonResource.fromAssetId(5714)} onReady={this._handleReady.bind(this)} /> */}\n      </Viewer>\n    );\n  }\n}\n\nexport default AppViewer;\n","import React, { PureComponent } from 'react';\nimport { Menu, Dropdown, Button, Icon } from 'antd';\nimport { inject } from 'mobx-react';\nimport styles from './index.module.css';\nimport appViewerStore from '@/stores/modules/appViewer';\n\nconst handleCzmlMenuClick = ({ key: type }) => {\n  if (type === 'Box') {\n    import('@/data/czml/czmlBox').then(({ default: czmlBox }) => {\n      appViewerStore.setCzmlData(czmlBox);\n    });\n  } else if (type === 'Satellite') {\n    import('@/data/czml/satelliteCzml').then(({ default: satelliteCzml }) => {\n      appViewerStore.setCzmlData(satelliteCzml);\n    });\n  } else if (type === 'DynamicPoint') {\n    import('@/data/czml/dynamicPoint').then(({ default: dynamicPoint }) => {\n      appViewerStore.setCzmlData(dynamicPoint);\n    });\n  } else if (type === 'Path') {\n    import('@/data/czml/pathCzml').then(({ default: pathCzml }) => {\n      appViewerStore.setCzmlData(pathCzml);\n    });\n  }\n};\n\nconst czmlMenu = (\n  <Menu onClick={handleCzmlMenuClick}>\n    <Menu.Item key=\"Box\">Box</Menu.Item>\n    <Menu.Item key=\"Satellite\">Satellite</Menu.Item>\n    <Menu.Item key=\"DynamicPoint\">DynamicPoint</Menu.Item>\n    <Menu.Item key=\"Path\">Path</Menu.Item>\n  </Menu>\n);\n\nconst handleGeoJsonClick = ({ key: type }) => {\n  if (type === 'Point') {\n    import('@/data/geoJson/pointGeoJson').then(({ default: pointGeoJson }) => {\n      appViewerStore.setGeoJsonData(pointGeoJson);\n    });\n  } else if (type === 'Simple Styles') {\n    import('@/data/geoJson/simplestylesGeojson').then(({ default: simplestylesGeojson }) => {\n      appViewerStore.setGeoJsonData(simplestylesGeojson);\n    });\n  } else if (type === 'Population') {\n    import('@/data/geoJson/statestopoGeojson').then(({ default: statestopoGeojson }) => {\n      appViewerStore.setGeoJsonData(statestopoGeojson);\n    });\n  }\n};\n\nconst geoJsonMenu = (\n  <Menu onClick={handleGeoJsonClick}>\n    <Menu.Item key=\"Point\">Point</Menu.Item>\n    <Menu.Item key=\"Simple Styles\">Simple Styles</Menu.Item>\n    <Menu.Item key=\"Population\">Population</Menu.Item>\n  </Menu>\n);\n\n@inject('appViewer')\nclass ToolBar extends PureComponent {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const { setCzmlData, setGeoJsonData } = this.props.appViewer;\n    const _className = `${styles.toolbar} ${this.props.className ? this.props.className : ''} `;\n    return (\n      <div className={_className}>\n        <Dropdown overlay={czmlMenu}>\n          <Button type=\"primary\" style={{ marginRight: 10, marginBottom: 10 }}>\n            Render czml and fly to <Icon type=\"down\" />\n          </Button>\n        </Dropdown>\n        <Dropdown overlay={geoJsonMenu}>\n          <Button type=\"primary\">\n            Render geojson and fly to <Icon type=\"down\" />\n          </Button>\n        </Dropdown>\n        {/* <Button\n          type=\"primary\"\n          style={{ marginLeft: 10 }}\n          onClick={event => {\n            setGeoJsonData(pointGeoJson);\n          }}\n        >\n          Render geojson and fly to\n        </Button> */}\n      </div>\n    );\n  }\n}\n\nexport default ToolBar;\n","import React, { Component } from 'react';\nimport styles from './index.module.css';\nimport { inject, observer } from 'mobx-react';\n\n@inject('appViewer')\n@observer\nclass LocationBar extends Component {\n  _className = `${styles.locationbar} ${this.props.className ? this.props.className : ''} `;\n\n  render() {\n    const { positionData } = this.props.appViewer;\n    const { long, lat, height, elevation } = positionData\n      ? positionData\n      : { long: null, lat: null, height: null, elevation: null };\n\n    return (\n      <div className={this._className}>\n        <div>\n          {height ? <span className={styles.locationcamera}>视点高：{height}米</span> : null}\n          {/* {height ? <span className={styles.locationcamera}>俯仰角：-34度</span> : null} */}\n          {/* {height ? <span className={styles.locationcamera}>视角方向：86度</span> : null} */}\n          {elevation ? <span className={styles.locationcamera}>海拔：{elevation}米</span> : null}\n          {long ? <span className={styles.locationcamera}>经度：{long}</span> : null}\n          {lat ? <span className={styles.locationcamera}>纬度：{lat}</span> : null}\n        </div>\n        <div className={styles.distancelegend}>比例尺</div>\n      </div>\n    );\n  }\n}\n\nexport default LocationBar;\n","import * as React from 'react';\nimport { hot } from 'react-hot-loader/root';\n\nimport AppViewer from './containers/AppViewer';\nimport ToolBar from './containers/ToolBar';\nimport LocationBar from './containers/LocationBar';\nimport styles from './App.module.css';\n\ninterface Props {}\n\nclass App extends React.Component<Props, {}> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <>\n        <ToolBar className={styles.toolbar} />\n        <LocationBar className={styles.locationbar} />\n        <AppViewer />\n      </>\n    );\n  }\n}\n\nexport default hot(App);\n"],"sourceRoot":""}