{"version":3,"sources":["containers/ToolBar/index.module.css","containers/LocationBar/index.module.css","App.module.css","containers/AppViewer/ImageryLayers.tsx","containers/AppViewer/GeoJson.tsx","containers/AppViewer/Czml.tsx","containers/AppViewer/EventHandler.tsx","containers/AppViewer/Entitys.tsx","containers/AppViewer/index.tsx","containers/ToolBar/index.tsx","containers/LocationBar/index.tsx","App.tsx"],"names":["module","exports","toolbar","locationbar","locationcamera","distancelegend","imageryProvider","memoize","WebMapTileServiceImageryProvider","ImageryLayers","React","memo","_ref","imageryProviders","console","log","react_default","a","createElement","Fragment","map","item","i","resium_es","key","prevProps","nextProps","geoJsonData","cesium","useContext","CesiumContext","data","onLoad","viewer","flyTo","withCesium","czmlData","CzmlDataSource","getMousePointPosition","camera","globe","Cartesian2","ellipsoid","arguments","length","undefined","Ellipsoid","WGS84","cartesian","pickEllipsoid","defined","cartographic","cartesianToCartographic","longitude","CesiumMath","toDegrees","toFixed","latitude","elevation","Math","ceil","getHeight","long","lat","height","positionCartographic","EventHandler","inject","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_handleMouseMoveEvent","e","setPositionData","appViewer","endPosition","positionData","state","action","type","ScreenSpaceEventType","MOUSE_MOVE","PureComponent","entityPosition","Cartesian3","fromDegrees","name","position","pixelSize","color","Color","CRIMSON","outlineWidth","outlineColor","LIGHTCORAL","Cesium","Ion","defaultAccessToken","appViewerStore","cesiumAccessToken","CzmmlMenuItemName","AppViewer","observer","ref","terrainProvider","_handleReady","tileset","zoomTo","createRef","CesiumTerrainProvider","url","IonResource","fromAssetId","current","cesiumElement","scene","debugShowFramesPerSecond","cesiumWidget","creditContainer","style","display","destination","full","animation","shouldAnimate","baseLayerPicker","timeline","geocoder","AppViewer_ImageryLayers","AppViewer_EventHandler","AppViewer_Entitys","AppViewer_GeoJson","AppViewer_Czml","Component","GeoJsonMenuItemName","czmlMenu","menu","onClick","Box","__webpack_require__","then","t","bind","_ref2","czmlBox","default","setCzmlData","Satellite","_ref3","satelliteCzml","DynamicPoint","_ref4","dynamicPoint","Path","_ref5","pathCzml","Item","geoJsonMenu","_ref6","Point","_ref7","pointGeoJson","setGeoJsonData","SimpleStyles","_ref8","simplestylesGeojson","Population","_ref9","statestopoGeojson","ToolBar","stores","_className","concat","styles","className","dropdown","overlay","es_button","marginRight","marginBottom","icon","LocationBar","MobXProviderContext","App","react","containers_ToolBar","containers_LocationBar","containers_AppViewer","hot"],"mappings":"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","file":"static/js/4.da4a2b95.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"ToolBar_toolbar__1jQkx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"locationbar\":\"LocationBar_locationbar__3Qpd2\",\"locationcamera\":\"LocationBar_locationcamera__q8YUE\",\"distancelegend\":\"LocationBar_distancelegend__2JWXa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"App_toolbar__11cl6\",\"locationbar\":\"App_locationbar__3Vkll\"};","import React from 'react';\nimport { WebMapTileServiceImageryProvider } from 'cesium';\nimport { ImageryLayer } from 'resium';\nimport memoize from 'memoize-one';\nimport { WebMapTileServiceImagery } from '@/stores/modules/appViewer';\n\nconst imageryProvider = memoize(imageryProvider => new WebMapTileServiceImageryProvider(imageryProvider));\n\nconst ImageryLayers = React.memo(\n  ({ imageryProviders }: { imageryProviders: WebMapTileServiceImagery[] }) => {\n    console.log('ImageryLayers render');\n    return (\n      <>\n        {/* <ImageryLayerCollection></ImageryLayerCollection> */}\n        {imageryProviders.map((item, i) => {\n          return <ImageryLayer key={i} imageryProvider={imageryProvider(item)} />;\n        })}\n      </>\n    );\n  },\n  (prevProps, nextProps) => prevProps.imageryProviders === nextProps.imageryProviders\n);\n\nexport default ImageryLayers;\n","import React from 'react';\nimport { Viewer as CesiumViewer } from 'cesium';\nimport { GeoJsonDataSource, CesiumContext } from 'resium';\nimport { Resource } from '@/stores/modules/appViewer';\n\ninterface Iprops {\n  geoJsonData: Resource;\n}\n\ninterface ICesiumContext {\n  viewer: CesiumViewer;\n}\n\nconst GeoJson: React.FunctionComponent<Iprops> = ({ geoJsonData }) => {\n  console.log('GeoJson render');\n  // TODO: define Type\n  const cesium: any = React.useContext(CesiumContext);\n  return geoJsonData ? (\n    <GeoJsonDataSource data={geoJsonData} onLoad={geoJsonData => cesium.viewer.flyTo(geoJsonData)} />\n  ) : null;\n};\n\nexport default React.memo(GeoJson);\n","import React from 'react';\nimport Cesium from 'cesium';\nimport { CzmlDataSource, withCesium } from 'resium';\nimport { Resource } from '@/stores/modules/appViewer';\n\ninterface Iprops {\n  cesium?: { viewer: Cesium.Viewer };\n  czmlData: Resource;\n}\n\nconst Czml: React.FunctionComponent<Iprops> = ({ cesium, czmlData }) => {\n  console.log('Czml render');\n  return czmlData ? (\n    <CzmlDataSource data={czmlData} onLoad={CzmlDataSource => cesium!.viewer.flyTo(CzmlDataSource)} />\n  ) : null;\n};\n\nexport default React.memo(withCesium(Czml));\n","import React, { PureComponent } from 'react';\nimport { inject } from 'mobx-react';\nimport { ScreenSpaceEventType, Ellipsoid, defined, Math as CesiumMath, Globe } from 'cesium';\nimport { ScreenSpaceEventHandler, ScreenSpaceEvent, withCesium } from 'resium';\nimport { IStores } from '@/stores';\n\n/**\n *获取实例的二维笛卡尔点的经度、纬度、相机高度、海拔高度\n *\n * @param {*} camera\n * @param {*} globe\n * @param {*} Cartesian2\n * @param {*} [ellipsoid=Ellipsoid.WGS84]\n * @returns\n */\nconst getMousePointPosition = (\n  camera: Cesium.Camera,\n  globe: Cesium.Globe,\n  Cartesian2: Cesium.Cartesian2,\n  ellipsoid: Ellipsoid = Ellipsoid.WGS84\n) => {\n  // 通过指定的椭球或者地图对应的坐标系，将鼠标的二维坐标转换为对应椭球体三维坐标\n  const cartesian = camera.pickEllipsoid(Cartesian2);\n  if (!defined(cartesian)) return;\n\n  // 将笛卡尔坐标转换为地理坐标\n  const cartographic = ellipsoid.cartesianToCartographic(cartesian);\n  // 将弧度转为度的十进制度表示\n  const longitude = CesiumMath.toDegrees(cartographic.longitude).toFixed(6);\n  const latitude = CesiumMath.toDegrees(cartographic.latitude).toFixed(6);\n  // 获取海拔高度\n  const elevation = Math.ceil(globe.getHeight(cartographic));\n  // 获取相机高度\n  const height = Math.ceil(camera.positionCartographic.height) - elevation;\n\n  return {\n    long: longitude,\n    lat: latitude,\n    height: height,\n    elevation: elevation\n  };\n};\n\ninterface EventHandlerProps {\n  appViewer?: IStores['appViewer'];\n}\n\ninterface EventHandlerContext {\n  camera?: Cesium.Camera;\n  globe?: Cesium.Globe;\n}\n\ntype props = EventHandlerProps & { cesium: EventHandlerContext };\n\n@inject('appViewer')\nclass EventHandler extends PureComponent<props, {}> {\n  constructor(props: props) {\n    super(props);\n    this.state = {};\n  }\n\n  _handleEvent(e: Event) {\n    console.log(e);\n  }\n\n  _handleMouseMoveEvent = (e: { position: Cesium.Cartesian2; endPosition?: Cesium.Cartesian2 }): void => {\n    const { camera, globe } = this.props.cesium!;\n    const { setPositionData } = this.props.appViewer!;\n    if (!e.endPosition || !camera || !globe) return;\n    const positionData = getMousePointPosition(camera, globe, e.endPosition);\n    if (!positionData) return;\n    setPositionData(positionData);\n  };\n\n  render() {\n    console.log('EventHandler render');\n    return (\n      <ScreenSpaceEventHandler>\n        <ScreenSpaceEvent action={this._handleMouseMoveEvent} type={ScreenSpaceEventType.MOUSE_MOVE} />\n      </ScreenSpaceEventHandler>\n    );\n  }\n}\n\nexport default withCesium<EventHandlerProps, EventHandlerContext>(EventHandler);\n","import React from 'react';\nimport { Color, Cartesian3 } from 'cesium';\nimport { Entity, PointGraphics, EntityDescription } from 'resium';\n\nconst Entitys = () => {\n  const entityPosition = Cartesian3.fromDegrees(105.0707383, 30.7117244, 100);\n  console.log('Entitys render');\n  return (\n    <Entity name=\"Sokyo\" position={entityPosition}>\n      <PointGraphics pixelSize={25} color={Color.CRIMSON} outlineWidth={5} outlineColor={Color.LIGHTCORAL} />\n      <EntityDescription>\n        <h1>Hello, world.</h1>\n        <p>JSX is available here!</p>\n      </EntityDescription>\n    </Entity>\n  );\n};\n\nexport default React.memo(Entitys);\n","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport Cesium, { CesiumTerrainProvider } from 'cesium';\nimport { Viewer, CameraFlyTo } from 'resium';\nimport appViewerStore from '@/stores/modules/appViewer';\nimport ImageryLayers from './ImageryLayers';\nimport GeoJson from './GeoJson';\nimport Czml from './Czml';\nimport EventHandler from './EventHandler';\nimport Entitys from './Entitys';\nimport { IStores } from '@/stores';\n\n(Cesium as any).Ion.defaultAccessToken = appViewerStore.cesiumAccessToken;\n\ninterface IProps {\n  appViewer?: IStores['appViewer'];\n}\n\n@inject('appViewer')\n@observer\nclass AppViewer extends Component<IProps, {}> {\n  ref: { current: any | HTMLDivElement };\n  viewer: Cesium.Viewer | undefined | any;\n  terrainProvider: CesiumTerrainProvider;\n\n  constructor(props: IProps) {\n    super(props);\n    this.ref = React.createRef();\n    this.terrainProvider = new CesiumTerrainProvider({\n      url: (Cesium as any).IonResource.fromAssetId(3956)\n    });\n    this.state = {};\n  }\n\n  componentDidMount() {\n    if (this.ref.current) {\n      this.viewer = this.ref.current.cesiumElement;\n      this.viewer.scene.debugShowFramesPerSecond = true;\n      this.viewer.cesiumWidget.creditContainer.style.display = 'none';\n    }\n  }\n\n  _handleReady = (tileset: any) => {\n    console.log(tileset);\n\n    if (this.viewer) {\n      this.viewer.zoomTo(tileset);\n    }\n  };\n\n  _handleEvent(e: Event) {\n    console.log(e);\n  }\n\n  render() {\n    const { geoJsonData, czmlData, destination, imageryProviders } = this.props.appViewer!;\n\n    console.log('AppViewer render');\n\n    return (\n      <Viewer\n        full\n        animation={false}\n        shouldAnimate={true}\n        baseLayerPicker={false}\n        timeline={false}\n        geocoder={false}\n        terrainProvider={this.terrainProvider}\n        ref={this.ref}\n      >\n        <ImageryLayers imageryProviders={imageryProviders} />\n        <EventHandler />\n        <Entitys />\n        {destination ? <CameraFlyTo destination={destination} /> : null}\n        <GeoJson geoJsonData={geoJsonData} />\n        <Czml czmlData={czmlData} />\n        {/* <Cesium3DTileset url={IonResource.fromAssetId(5714)} onReady={this._handleReady} /> */}\n      </Viewer>\n    );\n  }\n}\n\nexport default AppViewer;\n","import React, { PureComponent } from 'react';\nimport { Menu, Dropdown, Button, Icon } from 'antd';\nimport { inject } from 'mobx-react';\nimport styles from './index.module.css';\nimport { IStores } from '@/stores';\nimport appViewerStore from '@/stores/modules/appViewer';\n\nenum CzmmlMenuItemName {\n  Box = 'Box',\n  Satellite = 'Satellite',\n  DynamicPoint = 'DynamicPoint',\n  Path = 'Path'\n}\n\nconst handleCzmlMenuClick = ({ key }: { key: string }) => {\n  if (key === CzmmlMenuItemName.Box) {\n    import('@/data/czml/czmlBox.json').then(({ default: czmlBox }) => {\n      appViewerStore.setCzmlData(czmlBox);\n    });\n  } else if (key === CzmmlMenuItemName.Satellite) {\n    import('@/data/czml/satelliteCzml.json').then(({ default: satelliteCzml }) => {\n      appViewerStore.setCzmlData(satelliteCzml);\n    });\n  } else if (key === CzmmlMenuItemName.DynamicPoint) {\n    import('@/data/czml/dynamicPoint.json').then(({ default: dynamicPoint }) => {\n      appViewerStore.setCzmlData(dynamicPoint);\n    });\n  } else if (key === CzmmlMenuItemName.Path) {\n    import('@/data/czml/pathCzml.json').then(({ default: pathCzml }) => {\n      appViewerStore.setCzmlData(pathCzml);\n    });\n  }\n};\n\nconst czmlMenu = (\n  <Menu onClick={handleCzmlMenuClick}>\n    <Menu.Item key={CzmmlMenuItemName.Box}>Box</Menu.Item>\n    <Menu.Item key={CzmmlMenuItemName.Satellite}>Satellite</Menu.Item>\n    <Menu.Item key={CzmmlMenuItemName.DynamicPoint}>DynamicPoint</Menu.Item>\n    <Menu.Item key={CzmmlMenuItemName.Path}>Path</Menu.Item>\n  </Menu>\n);\n\nenum GeoJsonMenuItemName {\n  Point = 'Point',\n  SimpleStyles = 'Simple Styles',\n  Population = 'Population'\n}\n\nconst handleGeoJsonClick = ({ key }: { key: string }) => {\n  if (key === GeoJsonMenuItemName.Point) {\n    import('@/data/geoJson/pointGeoJson.json').then(({ default: pointGeoJson }) => {\n      appViewerStore.setGeoJsonData(pointGeoJson);\n    });\n  } else if (key === GeoJsonMenuItemName.SimpleStyles) {\n    import('@/data/geoJson/simplestylesGeojson.json').then(({ default: simplestylesGeojson }) => {\n      appViewerStore.setGeoJsonData(simplestylesGeojson);\n    });\n  } else if (key === GeoJsonMenuItemName.Population) {\n    import('@/data/geoJson/statestopoGeojson.json').then(({ default: statestopoGeojson }) => {\n      appViewerStore.setGeoJsonData(statestopoGeojson);\n    });\n  }\n};\n\nconst geoJsonMenu = (\n  <Menu onClick={handleGeoJsonClick}>\n    <Menu.Item key={GeoJsonMenuItemName.Point}>Point</Menu.Item>\n    <Menu.Item key={GeoJsonMenuItemName.SimpleStyles}>Simple Styles</Menu.Item>\n    <Menu.Item key={GeoJsonMenuItemName.Population}>Population</Menu.Item>\n  </Menu>\n);\n\ninterface IProps {\n  className: string;\n  appViewer?: IStores['appViewer'];\n}\n\n@inject((stores: IStores) => ({\n  appViewer: stores.appViewer\n}))\nclass ToolBar extends PureComponent<IProps, {}> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {}\n\n  render() {\n    // const { setCzmlData, setGeoJsonData } = this.props.appViewer!;\n    const _className = `${styles.toolbar} ${this.props.className ? this.props.className : ''} `;\n    return (\n      <div className={_className}>\n        <Dropdown overlay={czmlMenu}>\n          <Button type=\"primary\" style={{ marginRight: 10, marginBottom: 10 }}>\n            Render czml and fly to <Icon type=\"down\" />\n          </Button>\n        </Dropdown>\n        <Dropdown overlay={geoJsonMenu}>\n          <Button type=\"primary\">\n            Render geojson and fly to <Icon type=\"down\" />\n          </Button>\n        </Dropdown>\n        {/* <Button\n          type=\"primary\"\n          style={{ marginLeft: 10 }}\n          onClick={event => {\n            setGeoJsonData(pointGeoJson);\n          }}\n        >\n          Render geojson and fly to\n        </Button> */}\n      </div>\n    );\n  }\n}\n\nexport default ToolBar;\n","import React from 'react';\nimport styles from './index.module.css';\nimport { observer, MobXProviderContext } from 'mobx-react';\nimport { IStores } from '@/stores';\n\nconst LocationBar = observer(({ className }: { className: string }) => {\n  const _className = `${styles.locationbar} ${className} `;\n  const {\n    appViewer: { positionData }\n  } = React.useContext(MobXProviderContext) as IStores;\n  const { long, lat, height, elevation } = positionData;\n\n  // console.log('LocationBar render');\n\n  return (\n    <div className={_className}>\n      <div>\n        {height ? <span className={styles.locationcamera}>视点高：{height}米</span> : null}\n        {/* {height ? <span className={styles.locationcamera}>俯仰角：-34度</span> : null} */}\n        {/* {height ? <span className={styles.locationcamera}>视角方向：86度</span> : null} */}\n        {elevation ? <span className={styles.locationcamera}>海拔：{elevation}米</span> : null}\n        {long ? <span className={styles.locationcamera}>经度：{long}</span> : null}\n        {lat ? <span className={styles.locationcamera}>纬度：{lat}</span> : null}\n      </div>\n      <div className={styles.distancelegend}>比例尺</div>\n    </div>\n  );\n});\n\nexport default LocationBar;\n","import * as React from 'react';\nimport { hot } from 'react-hot-loader/root';\n\nimport AppViewer from './containers/AppViewer';\nimport ToolBar from './containers/ToolBar';\nimport LocationBar from './containers/LocationBar';\nimport styles from './App.module.css';\n\ninterface Props {}\n\nclass App extends React.Component<Props, {}> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <>\n        <ToolBar className={styles.toolbar} />\n        <LocationBar className={styles.locationbar} />\n        <AppViewer />\n      </>\n    );\n  }\n}\n\nexport default hot(App);\n"],"sourceRoot":""}